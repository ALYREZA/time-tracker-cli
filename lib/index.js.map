{"version":3,"sources":["../src/index.js"],"names":["config","name","tasks","pkg","notify","manager","EXEC","version","description","command","alias","action","key","Array","isArray","join","startTask","pauseTask","unpauseTask","stopTask","text","addDescription","stringTime","modifyTask","sumarize","search","rate","setInterval","getTime","process","stdout","write","moveCursor","console","log","JSON","stringify","getTasksJson","parse","argv","args","length","outputHelp","exit"],"mappings":"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","file":"index.js","sourcesContent":["import 'babel-polyfill'\n\nimport program from 'commander'\nimport updateNotifier from 'update-notifier'\nimport Configstore from 'configstore'\nimport pkg from '../package.json'\n\nimport Manager from './core/Manager'\nimport { humanParseDiff } from './core/utils'\nimport { outputVertical, cliError } from './core/output'\n\nimport autocomplete from './autocomplete'\n\nconst config = new Configstore(pkg.name, {\n    tasks:{},\n    config:{\n        'format.output': 'DD/MM',\n        'config.version': '2'\n    }\n})\n\nupdateNotifier({ pkg }).notify()\n\nconst manager = new Manager(config)\nautocomplete(config)\n\n//Exec\nlet EXEC = false\n\nprogram\n    .version(pkg.version)\n    .description('Tiny time tracker for projects')\n\nprogram\n    .command('start <task_key> [description]')\n    .description('Start task with a description.')\n    .alias('s')\n    .action(function(key, description) {\n        description = (description) ? Array.isArray(description) ? description.join(' ') : description : null\n        manager.startTask(key, description)\n        EXEC = true\n    })\n\nprogram\n    .command('pause <task_key>')\n    .description('Pause task')\n    .alias('p')\n    .action(function(key) {\n        manager.pauseTask(key)\n        EXEC = true\n    })\n\nprogram\n    .command('unpause <task_key>')\n    .description('Unpause task')\n    .alias('up')\n    .action(function(key) {\n        manager.unpauseTask(key)\n        EXEC = true\n    })\n\n\nprogram\n    .command('finish <task_key> [description]')\n    .description('Stop task, you can add a description')\n    .alias('f')\n    .action(function(key, description) {\n        manager.stopTask(key, description)\n        EXEC = true\n    })\n\nprogram\n    .command('description <task_key> <descriptionText...>')\n    .description('Add description to your task.')\n    .alias('d')\n    .action(function(key, text) {\n        text = Array.isArray(text) ? text.join(' ') : text\n        manager.addDescription(key, text)\n        EXEC = true\n    })\n\nprogram\n    .command('add <task_key> <stringTime>')\n    .description('Adds time to a task. Example: \"1h2m3s\"')\n    .action(function(key, stringTime) {\n        manager.modifyTask('add', key, stringTime)\n        manager.sumarize(key, manager.search(key), false)\n        EXEC = true\n    })\n\nprogram\n    .command('remove <task_key> <stringTime>')\n    .description('Subtract time to a task. Example: \"1h2m3s\"')\n    .alias('sub')\n    .action(function(key, stringTime) {\n        manager.modifyTask('subtract', key, stringTime)\n        manager.sumarize(key, manager.search(key), false)\n        EXEC = true\n    })\n\nprogram\n    .command('report [tasks] [rate]')\n    .description('Report time of the tasks, searched by key. Can pass a rate (1h).')\n    .alias('r')\n    .action(function(tasks, rate) {\n        tasks = (tasks) ? tasks : 'all'\n        manager.sumarize(tasks, rate)\n        EXEC = true\n    })\n\n\n\nprogram\n    .command('log <task_key>')\n    .description('Logs the time of the  task')\n    .alias('l')\n    .action(function(key) {\n        setInterval(() => {\n            let text = outputVertical('Task:', key, humanParseDiff(manager.getTime(key)))\n            process.stdout.write(text)\n            process.stdout.moveCursor(0,-2)\n        }, 1000)\n        EXEC = true\n    })\n\nprogram\n    .command('export')\n    .description('Export the tasks in a JSON')\n    .alias('e')\n    .action(function(key) {\n        console.log(JSON.stringify(manager.getTasksJson(), null, 4))\n        EXEC = true\n    })\n\nprogram\n    .parse(process.argv);\n\nif (program.args.length === 0 || !EXEC) {\n    cliError('You must use a valid command.')\n    program.outputHelp()\n    process.exit(1)\n}\n"]}