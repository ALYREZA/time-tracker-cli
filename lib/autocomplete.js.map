{"version":3,"sources":["../src/autocomplete.js"],"names":["autocomplete","config","complete","allTaskKeys","reply","Object","keys","all","tasks","on","cmd","keyTasks","indexOf","init","process","argv","setupShellInitFile"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAASC,MAAT,EAAgB;;AAEjC,QAAMC,WAAW,wBAAS,mBAAT,CAAjB;;AAEA,QAAIC,cAAc,SAAdA,WAAc,GAAW;AACzB,aAAKC,KAAL,CAAWC,OAAOC,IAAP,CAAYL,OAAOM,GAAP,CAAWC,KAAvB,CAAX;AACH,KAFD;;AAIAN,aAASO,EAAT,CAAY,KAAZ,EAAmB,YAAW;AAC1B,aAAKL,KAAL,CAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,aAAxC,EAAuD,KAAvD,EAA8D,UAA9D,EAA0E,QAA1E,EAAoF,KAApF,EAA2F,QAA3F,EAAqG,QAArG,EAA+G,eAA/G,EAAgI,WAAhI,CAAX;AACH,KAFD;;AAIAF,aAASO,EAAT,CAAY,KAAZ,EAAmB,UAASC,GAAT,EAAc;AAC7B,YAAIC,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,KAAxC,EAA+C,aAA/C,EAA8D,KAA9D,EAAqE,QAArE,CAAf;;AAEA,YAAIA,SAASC,OAAT,CAAiBF,GAAjB,IAAwB,CAAC,CAA7B,EAA+B;AAC3B,iBAAKN,KAAL,CAAWC,OAAOC,IAAP,CAAYL,OAAOM,GAAP,CAAWC,KAAvB,CAAX;AACH;;AAED,YAAIE,QAAQ,WAAZ,EAAyB;AACrB,iBAAKN,KAAL;AACH;AACJ,KAVD;;AAYAF,aAASW,IAAT;;AAEA,QAAI,CAACC,QAAQC,IAAR,CAAaH,OAAb,CAAqB,YAArB,CAAL,EAAyC;AACrCV,iBAASc,kBAAT;AACH;AAEJ,CA9BD;;kBAgCehB,Y","file":"autocomplete.js","sourcesContent":["import omelette from 'omelette'\nimport { configElements } from './core/constants'\n\nconst autocomplete = function(config){\n\n    const complete = omelette(\"timer <cmd> <key>\")\n\n    let allTaskKeys = function() {\n        this.reply(Object.keys(config.all.tasks));\n    }\n\n    complete.on(\"cmd\", function() {\n        this.reply([\"start\", \"pause\", \"unpause\", \"finish\", \"description\", \"add\", \"subtract\", \"report\", \"log\", \"export\", \"delete\", \"configuration\", \"configure\"])\n    });\n\n    complete.on(\"key\", function(cmd) {\n        let keyTasks = ['start', 'pause', 'unpause', 'finish', 'log', 'description', 'add', 'remove']\n\n        if (keyTasks.indexOf(cmd) > -1){\n            this.reply(Object.keys(config.all.tasks));\n        }\n\n        if (cmd === 'configure' ){\n            this.reply(configElements);\n        }\n    });\n\n    complete.init();\n\n    if (~process.argv.indexOf('--setupCLI')) {\n        complete.setupShellInitFile();\n    }\n\n}\n\nexport default autocomplete\n"]}