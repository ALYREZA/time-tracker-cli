{"version":3,"sources":["../src/Output.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAGO,IAAM,0CAAiB,SAAjB,cAAiB,CAAS,IAAT,EAAe;AACzC,QAAI,QAAU,KAAK,KAAL,CAAW,OAAO,IAAP,CAArB,CADqC;AAEzC,QAAI,UAAU,KAAK,KAAL,CAAW,CAAC,OAAQ,QAAQ,IAAR,CAAT,GAA0B,EAA1B,CAArB,CAFqC;AAGzC,QAAI,UAAU,OAAQ,QAAQ,IAAR,GAAiB,UAAU,EAAV,CAHE;AAIzC,YAAS,SAAS,CAAT,GAAa,EAAb,GAAkB,CAAC,QAAQ,EAAR,GAAa,MAAM,KAAN,GAAc,KAA3B,CAAD,GAAqC,IAArC,CAJc;AAKzC,cAAW,OAAC,IAAW,CAAX,IAAgB,SAAS,EAAT,GAAe,EAAhC,GAAqC,CAAC,UAAU,EAAV,GAAe,MAAM,OAAN,GAAgB,OAA/B,CAAD,GAA2C,IAA3C,CALP;AAMzC,cAAW,WAAW,CAAX,GAAe,EAAf,GAAoB,CAAC,UAAW,EAAX,GAAgB,MAAM,OAAN,GAAgB,OAAhC,CAAD,GAA4C,GAA5C,CANU;AAOzC,WAAO,QAAQ,OAAR,GAAkB,OAAlB,CAPkC;CAAf;;AAUvB,IAAM,kCAAa,SAAb,UAAa,CAAU,IAAV,EAAgB,KAAhB,EAAuB;AAC7C,QAAI,SAAS,EAAT,CADyC;AAE7C,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAJ,EAAW,GAA3B,EAAgC;AAC5B,kBAAU,IAAV,CAD4B;KAAhC;AAGA,WAAO,MAAP,CAL6C;CAAvB;;AAQnB,IAAM,8BAAW,SAAX,QAAW,CAAS,MAAT,EAAiB,KAAjB,EAAwB;AAC5C,QAAI,QAAQ,uBAAU;AAClB,cAAM,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAN;AACA,eAAO,EAAC,OAAO,EAAP,EAAW,YAAY,EAAZ,EAAgB,WAAW,EAAX,EAAe,aAAa,EAAb,EAAlD;KAFQ,CAAR,CADwC;AAK5C,QAAI,QAAQ,CAAR,CALwC;AAM5C,QAAI,oBAAiB,cAAjB,CANwC;;AAQ5C,UAAM,GAAN,CAAU,UAAC,IAAD,EAAO,KAAP,EAAe;AACrB,YAAI,WAAW,sBAAO,KAAK,IAAL,CAAU,IAAV,CAAP,CAAuB,IAAvB,CAA4B,sBAAO,KAAK,IAAL,CAAU,KAAV,CAAnC,EAAqD,SAArD,CAAX,CADiB;AAErB,iBAAS,QAAT,CAFqB;;AAIrB,YAAI,iBAAiB,eAAe,QAAf,CAAjB,CAJiB;;AAMrB,YAAI,OAAO,KAAK,IAAL,CANU;AAOrB,YAAI,YAAY,sBAAO,KAAK,IAAL,CAAU,KAAV,CAAP,CAAwB,MAAxB,CAA+B,YAA/B,CAAZ,CAPiB;;AASrB,cAAM,IAAN,CAAW,CAAC,cAAD,EAAiB,SAAjB,EAA4B,IAA5B,CAAX,EATqB;KAAf,CAAV,CAR4C;;AAoB5C,YAAQ,GAAR,CAAY,MAAM,QAAN,EAAZ,EApB4C;AAqB5C,QAAI,SAAS,wBAAT,CArBwC;AAsB5C,WAAO,IAAP,CAAY,cAAY,MAAZ,EAAsB,YAAtB,EAAoC,eAAe,KAAf,CAApC,CAAZ,EAtB4C;AAuB5C,YAAQ,GAAR,CAAY,OAAO,QAAP,EAAZ,EAvB4C;CAAxB","file":"Output.js","sourcesContent":["import moment from 'moment'\nimport Table from 'cli-table'\n\nexport const humanParseDiff = function(secs) {\n    let hours   = Math.floor(secs / 3600)\n    let minutes = Math.floor((secs - (hours * 3600)) / 60)\n    let seconds = secs - (hours * 3600) - (minutes * 60)\n    hours = (hours == 0 ? '' : (hours < 10 ? '0' + hours : hours) + 'h ')\n    minutes = ((minutes == 0 && hours == '') ? '' : (minutes < 10 ? '0' + minutes : minutes) + 'm ')\n    seconds = (seconds == 0 ? '' : (seconds  < 10 ? '0' + seconds : seconds) + 's')\n    return hours + minutes + seconds\n}\n\nexport const repeatChar = function (char, times) {\n    let output = ''\n    for (var i = 0; i < times; i++) {\n        output += char\n    }\n    return output\n}\n\nexport const sumarize = function(search, tasks) {\n    let table = new Table({\n        head: ['Time', 'Start', 'Task'],\n        chars: {'mid': '', 'left-mid': '', 'mid-mid': '', 'right-mid': ''}\n    });\n    let total = 0\n    let head= `Search: ${search} \\n`\n\n    tasks.map((task, index)=>{\n        let duration = moment(task.task.stop).diff(moment(task.task.start), 'seconds')\n        total += duration\n\n        let outputDuration = humanParseDiff(duration)\n\n        let name = task.name\n        let startTime = moment(task.task.start).format('DD/MM/YYYY')\n\n        table.push([outputDuration, startTime, name])\n    })\n\n    console.log(table.toString());\n    let table2 = new Table()\n    table2.push([`Search: ${search}`, 'Total time', humanParseDiff(total)])\n    console.log(table2.toString());\n}\n"]}