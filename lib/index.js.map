{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,8BAAe,EAAC,sBAAD,EAAf,EAAsB,MAAtB;;AAEA,OAAO,OAAP,GAAiB,SAAS,WAAT,CAAsB,CAAtB,EAAyB;;AAEtC,wBACK,OADL,CACa,kBAAI,OAAJ,CADb,CAEK,WAFL,CAEiB,gCAFjB,EAGK,MAHL,CAGY,oBAHZ,EAGkC,uBAHlC,EAIK,MAJL,CAIY,qBAJZ,EAImC,uBAJnC,EAKK,MALL,CAKY,iCALZ,EAK+C,6DAL/C,EAMK,MANL,CAMY,kBANZ,EAMgC,sBANhC,EAOK,MAPL,CAOY,qBAPZ,EAOmC,iFAPnC,EAQK,MARL,CAQY,cARZ,EAQ4B,+BAR5B,EASK,KATL,CASW,EAAE,IAAF,CATX,CAFsC;;AAatC,QAAI,oBAAQ,KAAR,EAAe;AACf,0BAAM,KAAN,CAAY,oBAAQ,KAAR,EAAe,oBAAQ,WAAR,CAA3B,CADe;KAAnB,MAEO,IAAI,oBAAQ,MAAR,EAAgB;AACvB,0BAAM,IAAN,CAAW,oBAAQ,MAAR,EAAgB,oBAAQ,WAAR,CAA3B,CADuB;AAEvB,gBAAQ,GAAR,CAAY,4BAAe,kBAAM,OAAN,CAAc,oBAAQ,MAAR,CAA7B,CAAZ,EAFuB;KAApB,MAGA,IAAI,oBAAQ,GAAR,EAAa;AACpB,oBAAY,YAAW;AACnB,oBAAQ,MAAR,CAAe,SAAf,GADmB;AAEnB,oBAAQ,MAAR,CAAe,KAAf,eAAiC,oBAAQ,GAAR,SAAe,4BAAe,kBAAM,OAAN,CAAc,oBAAQ,GAAR,CAA7B,CAAhD,EAFmB;SAAX,EAGT,GAHH,EADoB;KAAjB,MAKA,IAAI,oBAAQ,MAAR,EAAgB;AACvB,8BAAS,oBAAQ,MAAR,EAAgB,kBAAM,MAAN,CAAa,oBAAQ,MAAR,CAAtC,EADuB;KAApB,MAEA,IAAI,oBAAQ,MAAR,EAAgB;AACvB,gBAAQ,GAAR,CAAY,KAAK,SAAL,CAAe,kBAAM,YAAN,EAAf,EAAqC,IAArC,EAA2C,CAA3C,CAAZ,EADuB;KAApB;CAzBM","file":"index.js","sourcesContent":["import 'babel-polyfill'\n\nimport program from 'commander'\nimport updateNotifier from 'update-notifier'\n\nimport Task from './Task'\nimport {humanParseDiff, sumarize} from './Output'\nimport timer from './Manager'\nimport pkg from '../package.json'\n\nupdateNotifier({pkg}).notify()\n\nmodule.exports = function createTimer (p) {\n\n    program\n        .version(pkg.version)\n        .description('Tiny time tracker for projects')\n        .option('-s, --start <task>', 'Start the timer task.')\n        .option('-f, --finish <task>', 'Stops the timer task.')\n        .option('-d, --description <description>', 'Adds a descrpition for the task only in start/stop methods.')\n        .option('-l, --log <task>', 'Logs the timer task.')\n        .option('-r, --report <task>', 'Report time of the tasks, searched by kay, you can report all using all as key.')\n        .option('-e, --export', 'Prints the json of all tasks.')\n        .parse(p.argv)\n\n    if (program.start) {\n        timer.start(program.start, program.description)\n    } else if (program.finish) {\n        timer.stop(program.finish, program.description)\n        console.log(humanParseDiff(timer.getTime(program.finish)))\n    } else if (program.log) {\n        setInterval(function() {\n            process.stdout.clearLine()\n            process.stdout.write(`\\r Task: ${program.log} ${humanParseDiff(timer.getTime(program.log))}`)\r        }, 100)\n    } else if (program.report) {\n        sumarize(program.report, timer.search(program.report))\n    } else if (program.export) {\n        console.log(JSON.stringify(timer.getTasksJson(), null, 4))\n    }\n}\n"]}