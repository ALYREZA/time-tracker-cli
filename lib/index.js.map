{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,8BAAe,EAAC,sBAAD,EAAf,EAAsB,MAAtB;;AAEA,OAAO,OAAP,GAAiB,SAAS,WAAT,CAAsB,CAAtB,EAAyB;;AAEtC,wBACK,OADL,CACa,kBAAI,OAAJ,CADb,CAEK,WAFL,CAEiB,gCAFjB,EAIK,MAJL,CAIY,kCAJZ,EAIgD,uBAJhD,EAKK,MALL,CAKY,mCALZ,EAKiD,uBALjD,EAMK,MANL,CAMY,iCANZ,EAM+C,6DAN/C,EAQK,MARL,CAQY,+BARZ,EAQ6C,wCAR7C,EASK,MATL,CASY,8BATZ,EAS4C,8CAT5C,EAWK,MAXL,CAWY,kBAXZ,EAWgC,sBAXhC,EAYK,MAZL,CAYY,4BAZZ,EAY0C,uKAZ1C,EAaK,MAbL,CAaY,cAbZ,EAa4B,+BAb5B,EAeK,KAfL,CAeW,EAAE,IAAF,CAfX,CAFsC;;AAmBtC,QAAI,uBAAJ,CAnBsC;AAoBtC,QAAI,oBAAQ,KAAR,EAAc;AACd,sBAAc,oBAAQ,WAAR,IAAuB,oBAAQ,IAAR,CAAa,CAAb,CAAvB,CADA;AAEd,0BAAM,KAAN,CAAY,oBAAQ,KAAR,EAAe,WAA3B,EAFc;KAAlB,MAGO,IAAI,oBAAQ,MAAR,EAAe;AACtB,sBAAc,oBAAQ,WAAR,IAAuB,oBAAQ,IAAR,CAAa,CAAb,CAAvB,CADQ;AAEtB,0BAAM,IAAN,CAAW,oBAAQ,MAAR,EAAgB,WAA3B,EAFsB;AAGtB,gBAAQ,GAAR,CAAY,2BAAe,kBAAM,OAAN,CAAc,oBAAQ,MAAR,CAA7B,CAAZ,EAHsB;KAAnB,MAIA,IAAI,oBAAQ,GAAR,EAAY;AACnB,0BAAM,UAAN,CAAiB,KAAjB,EAAwB,oBAAQ,GAAR,EAAa,oBAAQ,IAAR,CAAa,CAAb,CAArC,EADmB;AAEnB,8BAAS,oBAAQ,GAAR,EAAa,kBAAM,MAAN,CAAa,oBAAQ,GAAR,CAAnC,EAFmB;KAAhB,MAGA,IAAI,oBAAQ,MAAR,EAAe;AACtB,0BAAM,UAAN,CAAiB,UAAjB,EAA6B,oBAAQ,MAAR,EAAgB,oBAAQ,IAAR,CAAa,CAAb,CAA7C,EADsB;AAEtB,8BAAS,oBAAQ,MAAR,EAAgB,kBAAM,MAAN,CAAa,oBAAQ,MAAR,CAAtC,EAFsB;KAAnB,MAGA,IAAI,oBAAQ,GAAR,EAAY;AACnB,oBAAY,YAAW;AACnB,oBAAQ,MAAR,CAAe,SAAf,GADmB;AAEnB,oBAAQ,MAAR,CAAe,KAAf,eAAiC,oBAAQ,GAAR,SAAe,2BAAe,kBAAM,OAAN,CAAc,oBAAQ,GAAR,CAA7B,CAAhD,EAFmB;SAAX,EAGT,GAHH,EADmB;KAAhB,MAKA,IAAI,oBAAQ,MAAR,EAAe;AACtB,8BAAS,oBAAQ,MAAR,EAAgB,kBAAM,MAAN,CAAa,oBAAQ,MAAR,CAAtC,EAAuD,oBAAQ,IAAR,CAAa,CAAb,CAAvD,EAAwE,IAAxE,EADsB;KAAnB,MAEA,IAAI,oBAAQ,MAAR,EAAe;AACtB,gBAAQ,GAAR,CAAY,KAAK,SAAL,CAAe,kBAAM,YAAN,EAAf,EAAqC,IAArC,EAA2C,CAA3C,CAAZ,EADsB;KAAnB;CAxCM","file":"index.js","sourcesContent":["import 'babel-polyfill'\n\nimport program from 'commander'\nimport updateNotifier from 'update-notifier'\n\nimport Task from './Task'\nimport {sumarize} from './Output'\nimport {humanParseDiff} from './Utils'\n\nimport timer from './Manager'\nimport pkg from '../package.json'\n\nupdateNotifier({pkg}).notify()\n\nmodule.exports = function createTimer (p) {\n\n    program\n        .version(pkg.version)\n        .description('Tiny time tracker for projects')\n\n        .option('-s, --start <task> <description>', 'Start the timer task.')\n        .option('-f, --finish <task> <description>', 'Stops the timer task.')\n        .option('-d, --description <description>', 'Adds a description for the task only in start/stop methods.')\n\n        .option('-a, --add <task> <timeString>', 'Adds time to a task. Example: \"1h2m3s\"')\n        .option('--remove <task> <timeString>', 'Subtract time from a task. Example: \"1h2m3s\"')\n\n        .option('-l, --log <task>', 'Logs the timer task.')\n        .option('-r, --report <task> <rate>', 'Report time of the tasks, searched by key, you can report all using all as key. Also you can pass a rate to calc an amount ex: 20h, calc the hours and mulpitly by 20')\n        .option('-e, --export', 'Prints the json of all tasks.')\n\n        .parse(p.argv)\n\n    let description\n    if (program.start){\n        description = program.description || program.args[0]\n        timer.start(program.start, description)\n    } else if (program.finish){\n        description = program.description || program.args[0]\n        timer.stop(program.finish, description)\n        console.log(humanParseDiff(timer.getTime(program.finish)))\n    } else if (program.add){\n        timer.modifyTask('add', program.add, program.args[0])\n        sumarize(program.add, timer.search(program.add))\n    } else if (program.remove){\n        timer.modifyTask('subtract', program.remove, program.args[0])\n        sumarize(program.remove, timer.search(program.remove))\n    } else if (program.log){\n        setInterval(function() {\n            process.stdout.clearLine()\n            process.stdout.write(`\\r Task: ${program.log} ${humanParseDiff(timer.getTime(program.log))}`)\n        }, 100)\n    } else if (program.report){\n        sumarize(program.report, timer.search(program.report), program.args[0], true)\n    } else if (program.export){\n        console.log(JSON.stringify(timer.getTasksJson(), null, 4))\n    }\n\n}\n"]}